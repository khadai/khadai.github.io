{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { ApplicationActionCreators, ApplicationActionTypes } from '../../action';\nimport { applicationInitialize, getInfo, joinUser } from '../../../service';\n\nconst handleJoinUserRequest = function* (action) {\n  try {\n    const data = yield call(joinUser, action.payload);\n    yield put(ApplicationActionCreators.joinUserSuccess(data));\n  } catch (error) {\n    yield put(ApplicationActionCreators.joinUserError(error));\n  }\n};\n\nconst handleGetInfoRequest = function* () {\n  try {\n    const data = yield call(getInfo);\n    yield put(ApplicationActionCreators.getInfoSuccess(data));\n  } catch (error) {\n    yield put(ApplicationActionCreators.getInfoError(error));\n  }\n};\n\nconst handleInitializeApplicationRequest = function* () {\n  try {\n    yield call(applicationInitialize());\n    yield put(ApplicationActionCreators.initializeApplicationSuccess());\n  } catch (error) {\n    yield put(ApplicationActionCreators.initializeApplicationError(error));\n  }\n};\n\nconst Saga = function* () {\n  yield takeLatest(ApplicationActionTypes.INITIALIZE_APPLICATION_REQUEST, handleInitializeApplicationRequest);\n  yield takeLatest(ApplicationActionTypes.GET_INFO_REQUEST, handleGetInfoRequest);\n  yield takeLatest(ApplicationActionTypes.JOIN_USER_REQUEST, handleJoinUserRequest);\n};\n\nexport default Saga;","map":{"version":3,"sources":["/Users/codepillow/codepillow/src/state/saga/application/index.js"],"names":["call","put","takeLatest","ApplicationActionCreators","ApplicationActionTypes","applicationInitialize","getInfo","joinUser","handleJoinUserRequest","action","data","payload","joinUserSuccess","error","joinUserError","handleGetInfoRequest","getInfoSuccess","getInfoError","handleInitializeApplicationRequest","initializeApplicationSuccess","initializeApplicationError","Saga","INITIALIZE_APPLICATION_REQUEST","GET_INFO_REQUEST","JOIN_USER_REQUEST"],"mappings":"AAEA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,yBAAR,EAAmCC,sBAAnC,QAAgE,cAAhE;AACA,SAAQC,qBAAR,EAA+BC,OAA/B,EAAwCC,QAAxC,QAAuD,kBAAvD;;AAEA,MAAMC,qBAAqB,GAAG,WAAWC,MAAX,EAAmB;AAC/C,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMV,IAAI,CAACO,QAAD,EAAWE,MAAM,CAACE,OAAlB,CAAvB;AACA,UAAMV,GAAG,CAACE,yBAAyB,CAACS,eAA1B,CAA0CF,IAA1C,CAAD,CAAT;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACE,yBAAyB,CAACW,aAA1B,CAAwCD,KAAxC,CAAD,CAAT;AACD;AACF,CAPD;;AASA,MAAME,oBAAoB,GAAG,aAAa;AACxC,MAAI;AACF,UAAML,IAAI,GAAG,MAAMV,IAAI,CAACM,OAAD,CAAvB;AACA,UAAML,GAAG,CAACE,yBAAyB,CAACa,cAA1B,CAAyCN,IAAzC,CAAD,CAAT;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACE,yBAAyB,CAACc,YAA1B,CAAuCJ,KAAvC,CAAD,CAAT;AACD;AACF,CAPD;;AASA,MAAMK,kCAAkC,GAAG,aAAa;AACtD,MAAI;AACF,UAAMlB,IAAI,CAACK,qBAAqB,EAAtB,CAAV;AACA,UAAMJ,GAAG,CAACE,yBAAyB,CAACgB,4BAA1B,EAAD,CAAT;AACD,GAHD,CAGE,OAAON,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACE,yBAAyB,CAACiB,0BAA1B,CAAqDP,KAArD,CAAD,CAAT;AACD;AACF,CAPD;;AASA,MAAMQ,IAAI,GAAG,aAAa;AACxB,QAAMnB,UAAU,CACZE,sBAAsB,CAACkB,8BADX,EAEZJ,kCAFY,CAAhB;AAIA,QAAMhB,UAAU,CACZE,sBAAsB,CAACmB,gBADX,EAEZR,oBAFY,CAAhB;AAIA,QAAMb,UAAU,CACZE,sBAAsB,CAACoB,iBADX,EAEZhB,qBAFY,CAAhB;AAID,CAbD;;AAeA,eAAea,IAAf","sourcesContent":["// @flow\n\nimport {call, put, takeLatest} from 'redux-saga/effects';\nimport {ApplicationActionCreators, ApplicationActionTypes} from '../../action';\nimport {applicationInitialize, getInfo, joinUser} from '../../../service';\n\nconst handleJoinUserRequest = function* (action) {\n  try {\n    const data = yield call(joinUser, action.payload);\n    yield put(ApplicationActionCreators.joinUserSuccess(data));\n  } catch (error) {\n    yield put(ApplicationActionCreators.joinUserError(error));\n  }\n};\n\nconst handleGetInfoRequest = function* () {\n  try {\n    const data = yield call(getInfo);\n    yield put(ApplicationActionCreators.getInfoSuccess(data));\n  } catch (error) {\n    yield put(ApplicationActionCreators.getInfoError(error));\n  }\n};\n\nconst handleInitializeApplicationRequest = function* () {\n  try {\n    yield call(applicationInitialize());\n    yield put(ApplicationActionCreators.initializeApplicationSuccess());\n  } catch (error) {\n    yield put(ApplicationActionCreators.initializeApplicationError(error));\n  }\n};\n\nconst Saga = function* () {\n  yield takeLatest(\n      ApplicationActionTypes.INITIALIZE_APPLICATION_REQUEST,\n      handleInitializeApplicationRequest,\n  );\n  yield takeLatest(\n      ApplicationActionTypes.GET_INFO_REQUEST,\n      handleGetInfoRequest,\n  );\n  yield takeLatest(\n      ApplicationActionTypes.JOIN_USER_REQUEST,\n      handleJoinUserRequest\n  );\n};\n\nexport default Saga;\n"]},"metadata":{},"sourceType":"module"}