{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport reducers from '../reducer';\nimport sagas from '../saga';\n\nconst getStorage = persistConfig => {\n  const combinedReducer = combineReducers(reducers);\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n  const persistedReducer = persistReducer(persistConfig, combinedReducer);\n  const store = createStore(persistedReducer, enhancer);\n  const persistor = persistStore(store);\n  sagaMiddleware.run(sagas);\n  return {\n    persistor,\n    store\n  };\n};\n\nexport { getStorage };","map":{"version":3,"sources":["/Users/codepillow/codepillow/src/state/store/index.js"],"names":["applyMiddleware","combineReducers","compose","createStore","createSagaMiddleware","persistReducer","persistStore","reducers","sagas","getStorage","persistConfig","combinedReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","enhancer","persistedReducer","store","persistor","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,UAAU,GAAIC,aAAD,IAAmB;AAClC,QAAMC,eAAe,GAAGV,eAAe,CAACM,QAAD,CAAvC;AACA,QAAMK,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CZ,OAAxE;AACA,QAAMa,cAAc,GAAGX,oBAAoB,EAA3C;AACA,QAAMY,QAAQ,GAAGJ,gBAAgB,CAACZ,eAAe,CAACe,cAAD,CAAhB,CAAjC;AACA,QAAME,gBAAgB,GAAGZ,cAAc,CAACK,aAAD,EAAgBC,eAAhB,CAAvC;AACA,QAAMO,KAAK,GAAGf,WAAW,CAACc,gBAAD,EAAmBD,QAAnB,CAAzB;AACA,QAAMG,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B;AAEAH,EAAAA,cAAc,CAACK,GAAf,CAAmBZ,KAAnB;AAEA,SAAO;AAAEW,IAAAA,SAAF;AAAaD,IAAAA;AAAb,GAAP;AACH,CAZD;;AAcA,SAAST,UAAT","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport reducers from '../reducer';\nimport sagas from '../saga';\n\nconst getStorage = (persistConfig) => {\n    const combinedReducer = combineReducers(reducers);\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const sagaMiddleware = createSagaMiddleware();\n    const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n    const persistedReducer = persistReducer(persistConfig, combinedReducer);\n    const store = createStore(persistedReducer, enhancer);\n    const persistor = persistStore(store);\n\n    sagaMiddleware.run(sagas);\n\n    return { persistor, store };\n};\n\nexport { getStorage };\n"]},"metadata":{},"sourceType":"module"}