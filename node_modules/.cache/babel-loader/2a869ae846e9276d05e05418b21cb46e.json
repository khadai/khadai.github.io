{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axiosError = _interopRequireDefault(require(\"axios-error\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.omit\"));\n\nvar _urlJoin = _interopRequireDefault(require(\"url-join\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst debugRequest = (0, _debug.default)('messaging-api-telegram');\n\nfunction onRequest({\n  method,\n  url,\n  body\n}) {\n  debugRequest(`${method} ${url}`);\n\n  if (body) {\n    debugRequest('Outgoing request body:');\n    debugRequest(JSON.stringify(body, null, 2));\n  }\n}\n\nclass TelegramClient {\n  static connect(accessTokenOrConfig) {\n    return new TelegramClient(accessTokenOrConfig);\n  }\n\n  constructor(accessTokenOrConfig) {\n    _defineProperty(this, \"_token\", void 0);\n\n    _defineProperty(this, \"_onRequest\", void 0);\n\n    _defineProperty(this, \"_axios\", void 0);\n\n    let origin;\n\n    if (accessTokenOrConfig && typeof accessTokenOrConfig === 'object') {\n      const config = accessTokenOrConfig;\n      this._token = config.accessToken;\n      this._onRequest = config.onRequest || onRequest;\n      origin = config.origin;\n    } else {\n      this._token = accessTokenOrConfig;\n      this._onRequest = onRequest;\n    }\n\n    this._axios = _axios.default.create({\n      baseURL: `${origin || 'https://api.telegram.org'}/bot${this._token}/`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    this._axios.interceptors.request.use(config => {\n      this._onRequest({\n        method: config.method,\n        url: (0, _urlJoin.default)(config.baseURL, config.url),\n        headers: _objectSpread({}, config.headers.common, {}, config.headers[config.method], {}, (0, _lodash.default)(config.headers, ['common', 'get', 'post', 'put', 'patch', 'delete', 'head'])),\n        body: config.data\n      });\n\n      return config;\n    });\n  }\n\n  get axios() {\n    return this._axios;\n  }\n\n  get accessToken() {\n    return this._token;\n  }\n\n  async _request(...args) {\n    try {\n      const response = await this._axios.post(...args);\n      const data = response.data,\n            config = response.config,\n            request = response.request;\n\n      if (!data.ok) {\n        throw new _axiosError.default(`Telegram API - ${data.description || ''}`, {\n          config,\n          request,\n          response\n        });\n      }\n\n      return data.result;\n    } catch (err) {\n      if (err.response && err.response.data) {\n        const _err$response$data = err.response.data,\n              error_code = _err$response$data.error_code,\n              description = _err$response$data.description;\n        const msg = `Telegram API - ${error_code} ${description || ''}`; // eslint-disable-line camelcase\n\n        throw new _axiosError.default(msg, err);\n      }\n\n      throw new _axiosError.default(err.message, err);\n    }\n  }\n  /**\n     * https://core.telegram.org/bots/api#getupdates\n     */\n\n\n  getUpdates(options) {\n    return this._request('/getUpdates', _objectSpread({}, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#getwebhookinfo\n     */\n\n\n  getWebhookInfo() {\n    return this._request('/getWebhookInfo');\n  }\n  /**\n     * https://core.telegram.org/bots/api#setwebhook\n     */\n\n\n  setWebhook(url) {\n    return this._request('/setWebhook', {\n      url\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#deletewebhook\n     */\n\n\n  deleteWebhook() {\n    return this._request('/deleteWebhook');\n  }\n  /**\n     * https://core.telegram.org/bots/api#getme\n     */\n\n\n  getMe() {\n    return this._request('/getMe');\n  }\n  /**\n     * https://core.telegram.org/bots/api#getuserprofilephotos\n     */\n\n\n  getUserProfilePhotos(userId, options) {\n    return this._request('/getUserProfilePhotos', _objectSpread({\n      user_id: userId\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#getfile\n     */\n\n\n  getFile(fileId) {\n    return this._request('/getFile', {\n      file_id: fileId\n    });\n  }\n  /**\n     * Get link for file. This is extension method of getFile()\n     */\n\n\n  getFileLink(fileId) {\n    return this.getFile(fileId).then(result => `https://api.telegram.org/file/bot${this._token}/${result.file_path}`);\n  }\n  /**\n     * https://core.telegram.org/bots/api#getchat\n     */\n\n\n  getChat(chatId) {\n    return this._request('/getChat', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n\n\n  getChatAdministrators(chatId) {\n    return this._request('/getChatAdministrators', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n\n\n  getChatMembersCount(chatId) {\n    return this._request('/getChatMembersCount', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n\n\n  getChatMember(chatId, userId) {\n    return this._request('/getChatMember', {\n      chat_id: chatId,\n      user_id: userId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendmessage\n     */\n\n\n  sendMessage(chatId, text, options) {\n    return this._request('/sendMessage', _objectSpread({\n      chat_id: chatId,\n      text\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendphoto\n     */\n\n\n  sendPhoto(chatId, photo, options) {\n    return this._request('/sendPhoto', _objectSpread({\n      chat_id: chatId,\n      photo\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendaudio\n     */\n\n\n  sendAudio(chatId, audio, options) {\n    return this._request('/sendAudio', _objectSpread({\n      chat_id: chatId,\n      audio\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#senddocument\n     */\n\n\n  sendDocument(chatId, document, options) {\n    return this._request('/sendDocument', _objectSpread({\n      chat_id: chatId,\n      document\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendsticker\n     */\n\n\n  sendSticker(chatId, sticker, options) {\n    return this._request('/sendSticker', _objectSpread({\n      chat_id: chatId,\n      sticker\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendvideo\n     */\n\n\n  sendVideo(chatId, video, options) {\n    return this._request('/sendVideo', _objectSpread({\n      chat_id: chatId,\n      video\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendvoice\n     */\n\n\n  sendVoice(chatId, voice, options) {\n    return this._request('/sendVoice', _objectSpread({\n      chat_id: chatId,\n      voice\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendvideonote\n     */\n\n\n  sendVideoNote(chatId, videoNote, options) {\n    return this._request('/sendVideoNote', _objectSpread({\n      chat_id: chatId,\n      video_note: videoNote\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendmediagroup\n     */\n\n\n  sendMediaGroup(chatId, media, options) {\n    return this._request('/sendMediaGroup', _objectSpread({\n      chat_id: chatId,\n      media\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendlocation\n     */\n\n\n  sendLocation(chatId, {\n    latitude,\n    longitude\n  }, options) {\n    return this._request('/sendLocation', _objectSpread({\n      chat_id: chatId,\n      latitude,\n      longitude\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#editmessagelivelocation\n     */\n\n\n  editMessageLiveLocation({\n    latitude,\n    longitude\n  }, options) {\n    return this._request('/editMessageLiveLocation', _objectSpread({\n      latitude,\n      longitude\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#stopmessagelivelocation\n     */\n\n\n  stopMessageLiveLocation(identifier) {\n    return this._request('/stopMessageLiveLocation', _objectSpread({}, identifier));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendvenue\n     */\n\n\n  sendVenue(chatId, {\n    latitude,\n    longitude,\n    title,\n    address\n  }, options) {\n    return this._request('/sendVenue', _objectSpread({\n      chat_id: chatId,\n      latitude,\n      longitude,\n      title,\n      address\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendcontact\n     */\n\n\n  sendContact(chatId, {\n    phone_number,\n    first_name\n  }, options) {\n    return this._request('/sendContact', _objectSpread({\n      chat_id: chatId,\n      phone_number,\n      first_name\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendchataction\n     */\n\n\n  sendChatAction(chatId, action) {\n    return this._request('/sendChatAction', {\n      chat_id: chatId,\n      action\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#editmessagetext\n     */\n\n\n  editMessageText(text, options) {\n    return this._request('/editMessageText', _objectSpread({\n      text\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#editmessagecaption\n     */\n\n\n  editMessageCaption(caption, options) {\n    return this._request('/editMessageCaption', _objectSpread({\n      caption\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#editmessagereplymarkup\n     */\n\n\n  editMessageReplyMarkup(replyMarkup, options) {\n    return this._request('/editMessageReplyMarkup', _objectSpread({\n      reply_markup: replyMarkup\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#deletemessage\n     */\n\n\n  deleteMessage(chatId, messageId) {\n    return this._request('/deleteMessage', {\n      chat_id: chatId,\n      message_id: messageId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#kickchatmember\n     */\n\n\n  kickChatMember(chatId, userId, options) {\n    return this._request('/kickChatMember', _objectSpread({\n      chat_id: chatId,\n      user_id: userId\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#unbanChatMember\n     */\n\n\n  unbanChatMember(chatId, userId) {\n    return this._request('/unbanChatMember', {\n      chat_id: chatId,\n      user_id: userId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#restrictChatMember\n     */\n\n\n  restrictChatMember(chatId, userId, options) {\n    return this._request('/restrictChatMember', _objectSpread({\n      chat_id: chatId,\n      user_id: userId\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#promoteChatMember\n     */\n\n\n  promoteChatMember(chatId, userId, options) {\n    return this._request('/promoteChatMember', _objectSpread({\n      chat_id: chatId,\n      user_id: userId\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#exportChatInviteLink\n     */\n\n\n  exportChatInviteLink(chatId) {\n    return this._request('/exportChatInviteLink', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#setChatPhoto\n     */\n\n\n  setChatPhoto(chatId, photo) {\n    return this._request('/setChatPhoto', {\n      chat_id: chatId,\n      photo\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#deleteChatPhoto\n     */\n\n\n  deleteChatPhoto(chatId) {\n    return this._request('/deleteChatPhoto', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#setChatTitle\n     */\n\n\n  setChatTitle(chatId, title) {\n    return this._request('/setChatTitle', {\n      chat_id: chatId,\n      title\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#setChatDescription\n     */\n\n\n  setChatDescription(chatId, description) {\n    return this._request('/setChatDescription', {\n      chat_id: chatId,\n      description\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#setchatstickerset\n     */\n\n\n  setChatStickerSet(chatId, stickerSetName) {\n    return this._request('/setChatStickerSet', {\n      chat_id: chatId,\n      sticker_set_name: stickerSetName\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#deletechatstickerset\n     */\n\n\n  deleteChatStickerSet(chatId) {\n    return this._request('/deleteChatStickerSet', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#pinChatMessage\n     */\n\n\n  pinChatMessage(chatId, messageId, options) {\n    return this._request('/pinChatMessage', _objectSpread({\n      chat_id: chatId,\n      messsage_id: messageId\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#unpinChatMessage\n     */\n\n\n  unpinChatMessage(chatId) {\n    return this._request('/unpinChatMessage', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#leaveChat\n     */\n\n\n  leaveChat(chatId) {\n    return this._request('/leaveChat', {\n      chat_id: chatId\n    });\n  }\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n\n\n  forwardMessage(chatId, fromChatId, messageId, options) {\n    return this._request('/forwardMessage', _objectSpread({\n      chat_id: chatId,\n      from_chat_id: fromChatId,\n      message_id: messageId\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendinvoice\n     */\n\n\n  sendInvoice(chatId, product, options) {\n    return this._request('/sendInvoice', _objectSpread({\n      chat_id: chatId\n    }, product, {}, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#answershippingquery\n     */\n\n\n  answerShippingQuery(shippingQueryId, ok, options) {\n    return this._request('/answerShippingQuery', _objectSpread({\n      shipping_query_id: shippingQueryId,\n      ok\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#answerprecheckoutquery\n     */\n\n\n  answerPreCheckoutQuery(preCheckoutQueryId, ok, options) {\n    return this._request('/answerPreCheckoutQuery', _objectSpread({\n      pre_checkout_query_id: preCheckoutQueryId,\n      ok\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#answerinlinequery\n     */\n\n\n  answerInlineQuery(inlineQueryId, results, options) {\n    return this._request('/answerInlineQuery', _objectSpread({\n      inline_query_id: inlineQueryId,\n      results\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#sendgame\n     */\n\n\n  sendGame(chatId, gameShortName, options) {\n    return this._request('/sendGame', _objectSpread({\n      chat_id: chatId,\n      game_short_name: gameShortName\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#setgamescore\n     */\n\n\n  setGameScore(userId, score, options) {\n    return this._request('/setGameScore', _objectSpread({\n      user_id: userId,\n      score\n    }, options));\n  }\n  /**\n     * https://core.telegram.org/bots/api#getgamehighscores\n     */\n\n\n  getGameHighScores(userId, options) {\n    return this._request('/getGameHighScores', _objectSpread({\n      user_id: userId\n    }, options));\n  }\n\n}\n\nexports.default = TelegramClient;","map":{"version":3,"sources":["/Users/codepillow/codepillow/node_modules/messaging-api-telegram/lib/TelegramClient.js"],"names":["Object","defineProperty","exports","value","default","_axiosError","_interopRequireDefault","require","_axios","_debug","_lodash","_urlJoin","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","debugRequest","onRequest","method","url","body","JSON","stringify","TelegramClient","connect","accessTokenOrConfig","constructor","origin","config","_token","accessToken","_onRequest","create","baseURL","headers","interceptors","request","use","common","data","axios","_request","args","response","post","ok","description","result","err","error_code","msg","message","getUpdates","options","getWebhookInfo","setWebhook","deleteWebhook","getMe","getUserProfilePhotos","userId","user_id","getFile","fileId","file_id","getFileLink","then","file_path","getChat","chatId","chat_id","getChatAdministrators","getChatMembersCount","getChatMember","sendMessage","text","sendPhoto","photo","sendAudio","audio","sendDocument","document","sendSticker","sticker","sendVideo","video","sendVoice","voice","sendVideoNote","videoNote","video_note","sendMediaGroup","media","sendLocation","latitude","longitude","editMessageLiveLocation","stopMessageLiveLocation","identifier","sendVenue","title","address","sendContact","phone_number","first_name","sendChatAction","action","editMessageText","editMessageCaption","caption","editMessageReplyMarkup","replyMarkup","reply_markup","deleteMessage","messageId","message_id","kickChatMember","unbanChatMember","restrictChatMember","promoteChatMember","exportChatInviteLink","setChatPhoto","deleteChatPhoto","setChatTitle","setChatDescription","setChatStickerSet","stickerSetName","sticker_set_name","deleteChatStickerSet","pinChatMessage","messsage_id","unpinChatMessage","leaveChat","forwardMessage","fromChatId","from_chat_id","sendInvoice","product","answerShippingQuery","shippingQueryId","shipping_query_id","answerPreCheckoutQuery","preCheckoutQueryId","pre_checkout_query_id","answerInlineQuery","inlineQueryId","results","inline_query_id","sendGame","gameShortName","game_short_name","setGameScore","score","getGameHighScores"],"mappings":"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","sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\nvar _axiosError = _interopRequireDefault(require(\"axios-error\"));\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _debug = _interopRequireDefault(require(\"debug\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.omit\"));\nvar _urlJoin = _interopRequireDefault(require(\"url-join\"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(source, true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(source).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst debugRequest = (0, _debug.default)('messaging-api-telegram');\n\nfunction onRequest({ method, url, body }) {\n  debugRequest(`${method} ${url}`);\n  if (body) {\n    debugRequest('Outgoing request body:');\n    debugRequest(JSON.stringify(body, null, 2));\n  }\n}\n\nclass TelegramClient {\n  static connect(accessTokenOrConfig) {\n    return new TelegramClient(accessTokenOrConfig);\n  }\n\n\n\n\n\n\n\n  constructor(accessTokenOrConfig) {_defineProperty(this, \"_token\", void 0);_defineProperty(this, \"_onRequest\", void 0);_defineProperty(this, \"_axios\", void 0);\n    let origin;\n    if (accessTokenOrConfig && typeof accessTokenOrConfig === 'object') {\n      const config = accessTokenOrConfig;\n\n      this._token = config.accessToken;\n      this._onRequest = config.onRequest || onRequest;\n      origin = config.origin;\n    } else {\n      this._token = accessTokenOrConfig;\n      this._onRequest = onRequest;\n    }\n\n    this._axios = _axios.default.create({\n      baseURL: `${origin || 'https://api.telegram.org'}/bot${this._token}/`,\n      headers: {\n        'Content-Type': 'application/json' } });\n\n\n\n    this._axios.interceptors.request.use(config => {\n      this._onRequest({\n        method: config.method,\n        url: (0, _urlJoin.default)(config.baseURL, config.url),\n        headers: _objectSpread({},\n        config.headers.common, {},\n        config.headers[config.method], {},\n        (0, _lodash.default)(config.headers, [\n        'common',\n        'get',\n        'post',\n        'put',\n        'patch',\n        'delete',\n        'head'])),\n\n\n        body: config.data });\n\n      return config;\n    });\n  }\n\n  get axios() {\n    return this._axios;\n  }\n\n  get accessToken() {\n    return this._token;\n  }\n\n  async _request(...args) {\n    try {\n      const response = await this._axios.post(...args);\n\n      const { data, config, request } = response;\n\n      if (!data.ok) {\n        throw new _axiosError.default(`Telegram API - ${data.description || ''}`, {\n          config,\n          request,\n          response });\n\n      }\n\n      return data.result;\n    } catch (err) {\n      if (err.response && err.response.data) {\n        const { error_code, description } = err.response.data;\n        const msg = `Telegram API - ${error_code} ${description || ''}`; // eslint-disable-line camelcase\n\n        throw new _axiosError.default(msg, err);\n      }\n      throw new _axiosError.default(err.message, err);\n    }\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getupdates\n     */\n  getUpdates(options) {\n    return this._request('/getUpdates', _objectSpread({},\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getwebhookinfo\n     */\n  getWebhookInfo() {\n    return this._request('/getWebhookInfo');\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#setwebhook\n     */\n  setWebhook(url) {\n    return this._request('/setWebhook', {\n      url });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#deletewebhook\n     */\n  deleteWebhook() {\n    return this._request('/deleteWebhook');\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getme\n     */\n  getMe() {\n    return this._request('/getMe');\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getuserprofilephotos\n     */\n  getUserProfilePhotos(userId, options) {\n    return this._request('/getUserProfilePhotos', _objectSpread({\n      user_id: userId },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getfile\n     */\n  getFile(fileId) {\n    return this._request('/getFile', {\n      file_id: fileId });\n\n  }\n\n  /**\n     * Get link for file. This is extension method of getFile()\n     */\n  getFileLink(fileId) {\n    return this.getFile(fileId).then(\n    (result) =>\n    `https://api.telegram.org/file/bot${this._token}/${result.file_path}`);\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getchat\n     */\n  getChat(chatId) {\n    return this._request('/getChat', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n  getChatAdministrators(chatId) {\n    return this._request('/getChatAdministrators', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n  getChatMembersCount(chatId) {\n    return this._request('/getChatMembersCount', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n  getChatMember(chatId, userId) {\n    return this._request('/getChatMember', {\n      chat_id: chatId,\n      user_id: userId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendmessage\n     */\n  sendMessage(chatId, text, options) {\n    return this._request('/sendMessage', _objectSpread({\n      chat_id: chatId,\n      text },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendphoto\n     */\n  sendPhoto(chatId, photo, options) {\n    return this._request('/sendPhoto', _objectSpread({\n      chat_id: chatId,\n      photo },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendaudio\n     */\n  sendAudio(chatId, audio, options) {\n    return this._request('/sendAudio', _objectSpread({\n      chat_id: chatId,\n      audio },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#senddocument\n     */\n  sendDocument(chatId, document, options) {\n    return this._request('/sendDocument', _objectSpread({\n      chat_id: chatId,\n      document },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendsticker\n     */\n  sendSticker(chatId, sticker, options) {\n    return this._request('/sendSticker', _objectSpread({\n      chat_id: chatId,\n      sticker },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendvideo\n     */\n  sendVideo(chatId, video, options) {\n    return this._request('/sendVideo', _objectSpread({\n      chat_id: chatId,\n      video },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendvoice\n     */\n  sendVoice(chatId, voice, options) {\n    return this._request('/sendVoice', _objectSpread({\n      chat_id: chatId,\n      voice },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendvideonote\n     */\n  sendVideoNote(chatId, videoNote, options) {\n    return this._request('/sendVideoNote', _objectSpread({\n      chat_id: chatId,\n      video_note: videoNote },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendmediagroup\n     */\n  sendMediaGroup(chatId, media, options) {\n    return this._request('/sendMediaGroup', _objectSpread({\n      chat_id: chatId,\n      media },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendlocation\n     */\n  sendLocation(\n  chatId,\n  { latitude, longitude },\n  options)\n  {\n    return this._request('/sendLocation', _objectSpread({\n      chat_id: chatId,\n      latitude,\n      longitude },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#editmessagelivelocation\n     */\n  editMessageLiveLocation(\n  { latitude, longitude },\n  options)\n  {\n    return this._request('/editMessageLiveLocation', _objectSpread({\n      latitude,\n      longitude },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#stopmessagelivelocation\n     */\n  stopMessageLiveLocation(identifier) {\n    return this._request('/stopMessageLiveLocation', _objectSpread({},\n    identifier));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendvenue\n     */\n  sendVenue(\n  chatId,\n  {\n    latitude,\n    longitude,\n    title,\n    address },\n\n\n\n\n\n\n  options)\n  {\n    return this._request('/sendVenue', _objectSpread({\n      chat_id: chatId,\n      latitude,\n      longitude,\n      title,\n      address },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendcontact\n     */\n  sendContact(\n  chatId,\n  {\n    phone_number,\n    first_name },\n\n  options)\n  {\n    return this._request('/sendContact', _objectSpread({\n      chat_id: chatId,\n      phone_number,\n      first_name },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendchataction\n     */\n  sendChatAction(chatId, action) {\n    return this._request('/sendChatAction', {\n      chat_id: chatId,\n      action });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#editmessagetext\n     */\n  editMessageText(text, options) {\n    return this._request('/editMessageText', _objectSpread({\n      text },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#editmessagecaption\n     */\n  editMessageCaption(caption, options) {\n    return this._request('/editMessageCaption', _objectSpread({\n      caption },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#editmessagereplymarkup\n     */\n  editMessageReplyMarkup(replyMarkup, options) {\n    return this._request('/editMessageReplyMarkup', _objectSpread({\n      reply_markup: replyMarkup },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#deletemessage\n     */\n  deleteMessage(chatId, messageId) {\n    return this._request('/deleteMessage', {\n      chat_id: chatId,\n      message_id: messageId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#kickchatmember\n     */\n  kickChatMember(chatId, userId, options) {\n    return this._request('/kickChatMember', _objectSpread({\n      chat_id: chatId,\n      user_id: userId },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#unbanChatMember\n     */\n  unbanChatMember(chatId, userId) {\n    return this._request('/unbanChatMember', {\n      chat_id: chatId,\n      user_id: userId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#restrictChatMember\n     */\n  restrictChatMember(chatId, userId, options) {\n    return this._request('/restrictChatMember', _objectSpread({\n      chat_id: chatId,\n      user_id: userId },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#promoteChatMember\n     */\n  promoteChatMember(chatId, userId, options) {\n    return this._request('/promoteChatMember', _objectSpread({\n      chat_id: chatId,\n      user_id: userId },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#exportChatInviteLink\n     */\n  exportChatInviteLink(chatId) {\n    return this._request('/exportChatInviteLink', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#setChatPhoto\n     */\n  setChatPhoto(chatId, photo) {\n    return this._request('/setChatPhoto', {\n      chat_id: chatId,\n      photo });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#deleteChatPhoto\n     */\n  deleteChatPhoto(chatId) {\n    return this._request('/deleteChatPhoto', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#setChatTitle\n     */\n  setChatTitle(chatId, title) {\n    return this._request('/setChatTitle', {\n      chat_id: chatId,\n      title });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#setChatDescription\n     */\n  setChatDescription(chatId, description) {\n    return this._request('/setChatDescription', {\n      chat_id: chatId,\n      description });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#setchatstickerset\n     */\n  setChatStickerSet(chatId, stickerSetName) {\n    return this._request('/setChatStickerSet', {\n      chat_id: chatId,\n      sticker_set_name: stickerSetName });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#deletechatstickerset\n     */\n  deleteChatStickerSet(chatId) {\n    return this._request('/deleteChatStickerSet', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#pinChatMessage\n     */\n  pinChatMessage(chatId, messageId, options) {\n    return this._request('/pinChatMessage', _objectSpread({\n      chat_id: chatId,\n      messsage_id: messageId },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#unpinChatMessage\n     */\n  unpinChatMessage(chatId) {\n    return this._request('/unpinChatMessage', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#leaveChat\n     */\n  leaveChat(chatId) {\n    return this._request('/leaveChat', {\n      chat_id: chatId });\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getchatmemberscount\n     */\n  forwardMessage(\n  chatId,\n  fromChatId,\n  messageId,\n  options)\n  {\n    return this._request('/forwardMessage', _objectSpread({\n      chat_id: chatId,\n      from_chat_id: fromChatId,\n      message_id: messageId },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendinvoice\n     */\n  sendInvoice(\n  chatId,\n  product,\n\n\n\n\n\n\n\n\n  options)\n  {\n    return this._request('/sendInvoice', _objectSpread({\n      chat_id: chatId },\n    product, {},\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#answershippingquery\n     */\n  answerShippingQuery(shippingQueryId, ok, options) {\n    return this._request('/answerShippingQuery', _objectSpread({\n      shipping_query_id: shippingQueryId,\n      ok },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#answerprecheckoutquery\n     */\n  answerPreCheckoutQuery(\n  preCheckoutQueryId,\n  ok,\n  options)\n  {\n    return this._request('/answerPreCheckoutQuery', _objectSpread({\n      pre_checkout_query_id: preCheckoutQueryId,\n      ok },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#answerinlinequery\n     */\n  answerInlineQuery(\n  inlineQueryId,\n  results,\n  options)\n  {\n    return this._request('/answerInlineQuery', _objectSpread({\n      inline_query_id: inlineQueryId,\n      results },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#sendgame\n     */\n  sendGame(chatId, gameShortName, options) {\n    return this._request('/sendGame', _objectSpread({\n      chat_id: chatId,\n      game_short_name: gameShortName },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#setgamescore\n     */\n  setGameScore(userId, score, options) {\n    return this._request('/setGameScore', _objectSpread({\n      user_id: userId,\n      score },\n    options));\n\n  }\n\n  /**\n     * https://core.telegram.org/bots/api#getgamehighscores\n     */\n  getGameHighScores(userId, options) {\n    return this._request('/getGameHighScores', _objectSpread({\n      user_id: userId },\n    options));\n\n  }}exports.default = TelegramClient;"]},"metadata":{},"sourceType":"script"}